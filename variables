1.VARIABLES :
Variables is a container which stores the value by reserving a memory location.
Rules for Variables :
  * Variables must start with a letter or the underscore character.
    ex : x = True , $x = False
  * It cannot start with a numeric values.
  * A variable name can contain alphabets,numeric characters and underscore(A-Z , 0-9 , _).
  * Variable names are case - sensitive.
    Ex : x=9 
         y = X+5
      ==> Name Error : name  'x' is not defined.

      
2.DECLARATION OF A VARIABLES :   
  Python has no command for declaring a variable. A variable is created when some value is assigned to it. 
  The value assigned to a variable determines the data type of that variable.
    
  INITIALIZATION OF A VARIABLE : 
  Initialization is the process of assigning a value to the variable.
    Ex : int x = 10; // declare and initialize variable x with value 10.
    SYNTAX : data_type variable_name = value;


3.REDECLARING VARIABLES IN PYTHON :
   We can redeclare Python variable once we have declared the variable and define variable in python already but it's more accurately ,this redeclaring is 
    reassigning . Python allows us to assign a new value to an existing variable, effectively changing its value or type.
    variable_name = initial_value  # Initial assignment
    variable_name = new_value      # Reassignment/Redeclaration
    Python doesn't have strict "variables" unlike other languages.
    

4.ASSIGN VALUES TO MULTIPLE VARIABLES : 
  First declare all the variables and then assign the value in the next line.It is important to note that all the variables refers to the same object.
    Ex : int a,b,c;  //variable declaration
         a=b=c=21;   // initialization 


5.ASSIGNING MULTIPLE VALUES TO MULTIPLE VARIABLES : 
    we can assign multiple values to multiple variables in one line.Note that same number of variables and objects should be there.
      Ex : x,y,z = 10,1,12
      print(x,y,z)


7.WHAT IS VARIABLE INTERPOLATION IN PYTHON : 
   String interpolation is the process of substituting the values of variables into the placeholders in a string.
      4 methods of python variable/string interpolation 
      *Modulo (%)
      *.format()
      *f-string
      *Template class 
   Ex : n1 = 'Hello!'
        n2 = 'Siri'
        print("Hi,I am Sai %s",%n2)  //For single substitutions
        print(%s "this is %s" , %(n1,n2)  //For multiple substitutions 


8.WHAT ARE THE BUILT IN DATA TYPES IN PYTHON : 
   Built in data types are : 
    ==> Numeric Data Types
        *Integer
        *Float
        *Complex
   ==> String Data Type (str)
   ==> Boolean Data Type (bool)
   ==> Collection Data Types 
       *List
       *Tuple
       *Dict
       *Set


9.DIFFERENCE BETWEEN LIST AND TUPLE :
  LIST : 
  * It is Mutable.
  * Iteration is slower and time consuming.            
  * Consumes more memory.
  * Operations are more error prone.
  * Many built in methods.
  * Useful for insertion and deletion operations.

  TUPLE : 
  * It is immutable.
  * Iteration is faster.
  * Consumes less memory
  * Operations are safe.
  * Less built in methods.
  * Useful for read only operations like accessing elements.


10.HOW CAN YOU CONVERT A STRING TO AN INTEGER IN PYTHON :
    Can be done with several built in functions in python.Tgese functions takes a string as its argument and returns the corresponding integer value.
    ==> Methods to convert str() to int()
    * int()
    * eval()
    * ast.literal_eval
    * str.isdigit()
   Ex : 
    num = '10'
    print(type(num))  //print type of num variable 
    converted _num = int(num)  //converting num from str to int 
    print(type(converted_num))  //print type of converted num
    print(converted_num + 20)

    Output :
      <class 'str'>
        <class 'int'>
          30


11.HOW CAN WE CHECK THE DATA TYPE OF A VARIABLE IN PYTHON?
   Ex:
   a=35
   print(type(a))
   b="Sai Siri"
   print(type(b))
   c=100.50
   print(type(c))
   d=[10,20,30]
   print(type(d))


12..EXPLAIN THE CONCEPT OF MUTABLE AND IMMUTABLE DATA TYPES IN PYTHON?
  Mutable Data Types:
   *Mutable data types are those whose values can be modified after the object is created.
==> List
  ex: my_list=[1,2,3]
      my_list[0]=10
      print(my_list)
==> Dictionary
  ex: my_dict = {"name": "Datta", "age":22}
      my_dict["age"]=23
      print(my_dict)
==> Set
  ex: my_set={1,2,3}
      my_set.add(4)
      print(my_set)
Immutable Data Types:
*Immutable data types are those whose values cannot be modified after the object is created.
==>Integer
ex: a=10
    a=a+1
    print(a)


13.HOW CAN YOU CREATE A DICTIONARY IN PYTHON? 
  We can create a dictionary using several methods.The common ways to create dictionaries are:
 
    *Using Curly Braces "{ }":
      Ex: my_dict = { "name" : "Datta", "age" : 22 }
           print(my_dict)

   *Using the 'dict()' Constructor:
     Ex: my_dict = dict ( name = "Datta", age = 22)
          print(my_dict)


14..WHAT IS THE PURPOSE OF THE ID() FUNCTION IN PYTHON?

The Python id() function accepts a single parameter and returns a unique identity (integer value) of that object.

ex: a=10
    b="Datta"
    c=5
    print(id(a))
    print(id(b))
    print(id(c))

15.HOW DO YOU REMOVE AN ELEMENT FROM A LIST IN PYTHON?
     We can remove elements from a list using several methods, depending on how you want to identify the element to remove. Here are some common ways to remove elements from a list:
      *Using 'remove()':

       The 'remove()' method removes the first occurrenece of a specified value in the list.
          Ex: my_list = [1,2,3,4,3]
               my_list.remove(3)
                 print(my_list)

      *Using 'pop-()':
   
       The pop() method removes the element at a specified index and returns it. If no index is specified, pop() removes and returns the last element.
          ex: my_list = [1,2,3,4,3]
               removed_element = my_list.pop(2)
               print(removed_element)
                print(my_list)
                 last_element = my_list.pop()
                  print(last_element)
                  print(my_list)





